{"version":3,"sources":["components/Business/Business.jsx","components/BusinessList/BusinessList.jsx","components/SearchBar/SearchBar.jsx","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","href","Yelp","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUA6BeA,E,4JAxBX,WACI,OACI,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAI,OAEhD,6BAAKJ,KAAKC,MAAMC,SAASG,OACzB,sBAAKP,UAAU,uBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,4BAAIE,KAAKC,MAAMC,SAASI,UACxB,4BAAIN,KAAKC,MAAMC,SAASK,OACxB,sCAAOP,KAAKC,MAAMC,SAASM,MAA3B,YAAoCR,KAAKC,MAAMC,SAASO,cAE5D,sBAAKX,UAAU,mBAAf,UACI,6BAAKE,KAAKC,MAAMC,SAASQ,SAASC,gBAClC,oBAAIb,UAAU,SAAd,mBAA2BE,KAAKC,MAAMC,SAASU,OAA/C,YACA,sCAAOZ,KAAKC,MAAMC,SAASW,YAA3B,2B,GAjBDC,IAAMC,WCiBdC,E,4JAfX,WACI,OACI,qBAAKlB,UAAU,eAAf,SAEQE,KAAKC,MAAMgB,WAAWC,KAAK,SAAChB,GAExB,OAAO,cAAC,EAAD,CAA2BA,SAAUA,GAAtBA,EAASiB,a,GAP5BL,IAAMC,WCkFlBK,G,wDAnFX,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IAEDO,MAAQ,CACTa,KAAM,GACNC,SAAU,GACVC,OAAQ,cAGZ,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAGpB,EAAKG,cAAgB,CACjB,aAAc,aACd,gBAAiB,SACjB,gBAAiB,gBAjBN,E,kDAqBnB,SAAeC,GACX,OAAI7B,KAAKQ,MAAMe,SAAWM,EACf,SAEJ,K,gCAGX,SAAmBA,GACf7B,KAAK8B,SAAS,CAAEP,OACZM,M,8BAIR,SAAiBE,GACb/B,KAAK8B,SAAS,CACVT,KAAMU,EAAMC,OAAOC,U,kCAI3B,SAAqBF,GACjB/B,KAAK8B,SAAS,CACVR,SAAUS,EAAMC,OAAOC,U,0BAI/B,SAAaF,GACT/B,KAAKC,MAAMiC,WAAWlC,KAAKQ,MAAMa,KAAMrB,KAAKQ,MAAMc,SAAUtB,KAAKQ,MAAMe,QAEvEQ,EAAMI,mB,iCAGV,WAAuB,IAAD,OAClB,OAAOC,OAAOC,KAAKrC,KAAK4B,eAAeV,KAAI,SAAAW,GACvC,IAAIS,EAAoB,EAAKV,cAAcC,GAC3C,OAAQ,oBAAI/B,UAAW,EAAKyC,eAAeD,GAEvCE,QAAS,EAAKC,mBAAmBhB,KAAK,EAAMa,GAFxC,SAGHT,GAFIS,Q,oBAOjB,WACI,OACI,sBAAKxC,UAAU,YAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,6BACKE,KAAK0C,0BAGd,sBAAK5C,UAAU,mBAAf,UACI,uBAAO6C,YAAY,oBAAoBC,SAAU5C,KAAKwB,mBACtD,uBAAOmB,YAAY,SAASC,SAAU5C,KAAK0B,0BAE/C,qBAAK5B,UAAU,mBAAf,SACI,mBAAG+C,KAAK,IAAIL,QAASxC,KAAK2B,aAA1B,+B,GA7EIb,IAAMC,YC8Bf+B,EA/BF,CACTZ,WADS,SACEb,EAAMC,EAAUC,GACvB,OAAOwB,MAAM,sFAAD,OAAuF1B,EAAvF,qBAAwGC,EAAxG,oBAA4HC,GAAS,CAC7IyB,QAAS,CACLC,cAAc,UAAD,OANd,uIAQJC,MAAK,SAACC,GACL,OAAOA,EAASC,UACjBF,MAAK,SAACG,GACL,GAAGA,EAAapC,WACZ,OAAOoC,EAAapC,WAAWC,KAAK,SAAChB,GACjC,MAAO,CACHiB,GAAIjB,EAASiB,GACbhB,SAAUD,EAASoD,UACnBjD,KAAMH,EAASG,KACfC,QAASJ,EAASoB,SAASiC,SAC3BhD,KAAML,EAASoB,SAASf,KACxBC,MAAON,EAASoB,SAASd,MACzBC,QAASP,EAASoB,SAASkC,SAC3B9C,SAAUR,EAASuD,WAAW,GAAGC,MACjC9C,OAAQV,EAASU,OACjBC,YAAYX,EAASyD,sBCoC9BC,E,kDA5Bb,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXS,WAAY,IAGd,EAAKiB,WAAa,EAAKA,WAAWT,KAAhB,gBAND,E,8CAUnB,SAAWJ,EAAKC,EAAUC,GAAS,IAAD,OAChCuB,EAAKZ,WAAWb,EAAMC,EAAUC,GAAQ2B,MAAK,SAACjC,GAC5C,EAAKa,SAAS,CACZb,WAAYA,S,oBAIlB,WACE,OACA,sBAAKnB,UAAU,MAAf,UACE,0CACE,cAAC,EAAD,CAAWoC,WAAYlC,KAAKkC,aAC5B,cAAC,EAAD,CAAcjB,WAAYjB,KAAKQ,MAAMS,oB,GAvB1BH,IAAMC,WClBV8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cf82d0cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt='' />\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category.toUpperCase()}</h3>\r\n                        <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\r\n                        <p>{`${this.props.business.reviewCount} reviews`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business'\r\n\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map( (business) =>  {\r\n                        // this is so react knows which is what and doesnt confuse the information.\r\n                        return <Business key={business.id}business={business}/>\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count'\r\n        };\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n        if (this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({ sortBy: \r\n            sortByOption \r\n        });\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({ \r\n            term: event.target.value \r\n        });\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({ \r\n            location: event.target.value \r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    \r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (<li className={this.getSortByClass(sortByOptionValue)}\r\n                key={sortByOptionValue}\r\n                onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n                {sortByOption}\r\n            </li>);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a href=\"#\" onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","const apiKey = 'AECQkvyXX52PmNpcmYCXjiFlekMyXncpQdhA44y75w8Byt4QNfxFe5mZRSf8WvFyP5q8hR2FgftdzYES0zqT3yJoRa5cofGNbmZnmgsRcqJAGzlGdrv8A4HDq4-iYHYx';\r\n\r\nconst Yelp = {\r\n    searchYelp(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,{\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            },\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((jsonResponse) => {\r\n            if(jsonResponse.businesses) {\r\n                return jsonResponse.businesses.map(((business) => {\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount:business.review_count\r\n\r\n\r\n                    }\r\n                }));\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\n\n\n// const business = {\n//   imageSrc: 'https://content.codecademy.com/programs/react/ravenous/pizza.jpg',\n//   name: 'MarginOtto Pizzeria',\n//   address: '1010 Paddington Way',\n//   city: 'Flavortown',\n//   state: 'NY',\n//   zipCode: '10101',\n//   category: 'Italian',\n//   rating: 4.5,\n//   reviewCount: 90\n// }\n\n// const businesses = [\n//   business,\n//   business,\n//   business,\n//   business,\n//   business,\n//   business\n// ]\n\nclass  App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n\n  }\n\n  searchYelp(term,location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {\n      this.setState({\n        businesses: businesses\n      });\n    })\n  }\n  render() {\n    return (\n    <div className=\"App\">\n      <h1>Yelp 2.0</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/>\n      </div>\n    );\n  }\n}\n  \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}